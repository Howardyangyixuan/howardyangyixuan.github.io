<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Y-y_x&#39;s Blog</title>
        <link>http://howardyangyixuan.github.io/</link>
        <description>Y-y_x&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 05 Jun 2020 13:37:27 &#43;0800</lastBuildDate><atom:link href="http://howardyangyixuan.github.io/" rel="self" type="application/rss+xml" /><item>
    <title>大话设计模式6：装饰模式</title>
    <link>http://howardyangyixuan.github.io/posts/%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F6%E8%A3%85%E9%A5%B0%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Fri, 05 Jun 2020 13:37:27 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://howardyangyixuan.github.io/posts/%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F6%E8%A3%85%E9%A5%B0%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[大话设计模式：6.装饰模式 装饰模式：动态地给一个对象，添加额外的职责。这种方式比生成子类更加灵活 TL;DR：装饰模式通过包装，分离核心职责和]]></description>
</item><item>
    <title>JS对象基本用法</title>
    <link>http://howardyangyixuan.github.io/posts/js%E5%AF%B9%E8%B1%A1%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</link>
    <pubDate>Wed, 20 May 2020 00:15:26 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://howardyangyixuan.github.io/posts/js%E5%AF%B9%E8%B1%A1%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</guid>
    <description><![CDATA[1. JS对象基本用法 1.1. JS对象 定义 无序数据集合 键值对 写法 let obj= {'name':'frank'} let obj= new Object({'name':''frank}) console.log({'name':'frank'}) 如果没有console.log，只是代码块 细节 !!!键名是字符串，就算]]></description>
</item><item>
    <title>大话设计模式3/4/5：四个设计原则</title>
    <link>http://howardyangyixuan.github.io/posts/%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F3-4-5%E5%9B%9B%E4%B8%AA%E5%8E%9F%E5%88%99/</link>
    <pubDate>Mon, 18 May 2020 00:12:16 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://howardyangyixuan.github.io/posts/%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F3-4-5%E5%9B%9B%E4%B8%AA%E5%8E%9F%E5%88%99/</guid>
    <description><![CDATA[大话设计模式 3/4/5：四个设计原则 大话设计模式 3/4/5：四个设计原则 1. 单一职责原则(SRP: Single Responsibility Principle)： 2. 开放-封闭原则(]]></description>
</item><item>
    <title>大话设计模式：2.策略模式</title>
    <link>http://howardyangyixuan.github.io/posts/%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F2%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Sat, 16 May 2020 23:59:52 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://howardyangyixuan.github.io/posts/%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F2%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[大话设计模式：2.策略模式 策略模式：定义了算法家族，分别封装，相互之间可以替换，使算法的变换不会影响使用算法的客户。 TL;DR：策略模式就是]]></description>
</item><item>
    <title>大话设计模式：1.简单工厂模式&amp;UML类图</title>
    <link>http://howardyangyixuan.github.io/posts/%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F1%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Fri, 15 May 2020 20:15:05 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://howardyangyixuan.github.io/posts/%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F1%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[大话设计模式：1.简单工厂模式 &amp; UML类图 前几章应该比较简单，快速推进！ 大话设计模式：1.简单工厂模式 &amp; UML类图 1. 设计一个计算器：基本的面]]></description>
</item><item>
    <title>大话设计模式：0.面向对象基础</title>
    <link>http://howardyangyixuan.github.io/posts/%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F0%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</link>
    <pubDate>Thu, 14 May 2020 22:24:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://howardyangyixuan.github.io/posts/%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F0%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</guid>
    <description><![CDATA[大话设计模式：0.面向对象基础 去年软工课上张老师苦口婆心：多线程+设计模式，没有总结性的博客和笔记，拖了快一年了。终于找到了合适的方式重新开]]></description>
</item><item>
    <title>JavaScript入门</title>
    <link>http://howardyangyixuan.github.io/posts/javascript%E5%85%A5%E9%97%A8/</link>
    <pubDate>Mon, 11 May 2020 19:54:16 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://howardyangyixuan.github.io/posts/javascript%E5%85%A5%E9%97%A8/</guid>
    <description><![CDATA[JavaScript入门 继续前进！ JavaScript入门 1. JS的诞生 2. JS 的 Prototype 3. JS 的设计缺陷 4. JS 基本语法tips 4.1. &amp;&amp; 和 || 4.2. fn &amp;&amp; fn() 4.3. label 4.4. setTimeout 1. J]]></description>
</item><item>
    <title>浅析URL</title>
    <link>http://howardyangyixuan.github.io/posts/%E6%B5%85%E6%9E%90url/</link>
    <pubDate>Mon, 11 May 2020 12:21:45 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://howardyangyixuan.github.io/posts/%E6%B5%85%E6%9E%90url/</guid>
    <description><![CDATA[浅析URL 昨天先一口气把小后端搭起来了，用的阿里云服务器，然后node.js配的一个很简单的http响应。因为这部分之前已经比较了解了就先放]]></description>
</item><item>
    <title>CSS知识总结3</title>
    <link>http://howardyangyixuan.github.io/posts/css%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%933/</link>
    <pubDate>Sun, 10 May 2020 15:16:18 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://howardyangyixuan.github.io/posts/css%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%933/</guid>
    <description><![CDATA[CSS 知识总结 3 啊还有定位，这篇CSS定位和动画一起总结下，然后贴一些做的小练习。 CSS 知识总结 3 1. CSS定位 1.1. CSS的层叠顺序（由上到下）： 1.2. po]]></description>
</item><item>
    <title>CSS知识总结2</title>
    <link>http://howardyangyixuan.github.io/posts/css%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%932/</link>
    <pubDate>Sat, 09 May 2020 14:44:23 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://howardyangyixuan.github.io/posts/css%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%932/</guid>
    <description><![CDATA[CSS 知识总结 2：CSS布局 感觉一篇太长了，感觉要分三篇，上一遍基本知识和历史，这一篇主要说布局，下一篇说渲染以及动画。 CSS 知识总结 2：CSS布局]]></description>
</item></channel>
</rss>
